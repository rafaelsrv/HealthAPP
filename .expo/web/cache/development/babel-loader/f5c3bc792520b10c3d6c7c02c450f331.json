{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Fragment, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ResultImc from \"./ResultImc/\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      height = _React$useState2[0],\n      setHeight = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      weight = _React$useState4[0],\n      setWeight = _React$useState4[1];\n\n  var _useState = useState(\"preencha o peso e alturaa\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      messageimc = _useState2[0],\n      setmessageimc = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imc = _useState4[0],\n      setimc = _useState4[1];\n\n  var _useState5 = useState(\"calcular\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      textButton = _useState6[0],\n      setTextButton = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMsg = _useState8[0],\n      setErrorMsg = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imcList = _useState10[0],\n      setImcList = _useState10[1];\n\n  function imccalculator() {\n    var heightFormat = height.replace(\",\", \".\");\n    var totalImc = (weight / (heightFormat * heightFormat)).toFixed(2);\n    setImcList(arr = [].concat(_toConsumableArray(arr), [{\n      id: new Date().getTime(),\n      imc: totalImc\n    }]));\n    setimc(totalImc);\n  }\n\n  function verifyNull() {\n    if (imc == null) {\n      Vibration.vibrate();\n      setErrorMsg(\"campo obrigatório*\");\n    }\n  }\n\n  function validationimc() {\n    if (weight != null && height != null) {\n      imccalculator();\n      setHeight(null);\n      setWeight(null);\n      setmessageimc(\"seu imc é igual: \");\n      setTextButton(\"Calcular novamente\");\n      setErrorMsg(null);\n    } else {\n      verifyNull();\n      setimc(null);\n      setTextButton(\"calcular\");\n      setmessageimc(\"preencha peso e altura\");\n    }\n  }\n\n  return _jsxs(View, {\n    style: styles.formContext,\n    children: [imc == null ? _jsx(Pressable, {\n      onPress: Keyboard.dismiss,\n      style: styles.form,\n      children: _jsxs(Fragment, {\n        children: [_jsx(Text, {\n          style: styles.formLabel,\n          children: \"Altura\"\n        }), _jsx(Text, {\n          style: styles.errorMsg,\n          children: errorMsg\n        }), _jsx(TextInput, {\n          onChangeText: setHeight,\n          value: height,\n          placeholder: \"Ex. 1.75\",\n          keyboardType: \"numeric\",\n          style: styles.formInput\n        }), _jsx(Text, {\n          style: styles.formLabel,\n          children: \"Peso\"\n        }), _jsx(Text, {\n          style: styles.errorMsg,\n          children: errorMsg\n        }), _jsx(TextInput, {\n          onChangeText: setWeight,\n          value: weight,\n          placeholder: \"Ex. 575\",\n          keyboardType: \"numeric\",\n          style: styles.formInput\n        }), _jsx(TouchableOpacity, {\n          style: styles.formCalc,\n          onPress: function onPress() {\n            validationimc(), Keyboard.dismiss;\n          },\n          children: _jsx(Text, {\n            style: styles.formButtom,\n            children: textButton\n          })\n        })]\n      })\n    }) : _jsxs(View, {\n      style: styles.exibitionResultImc,\n      children: [_jsx(ResultImc, {\n        messageresultimc: messageimc,\n        resultImc: imc\n      }), _jsx(TouchableOpacity, {\n        style: styles.formCalc,\n        onPress: function onPress() {\n          validationimc(), Keyboard.dismiss;\n        },\n        children: _jsx(Text, {\n          style: styles.formButtom,\n          children: textButton\n        })\n      })]\n    }), _jsx(FlatList, {\n      style: styles.listImcs,\n      data: imcList.reverse\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/rafae/Desktop/vamover/healthpqp/src/components/Form/index.js"],"names":["React","Fragment","useState","ResultImc","styles","Form","height","setHeight","weight","setWeight","messageimc","setmessageimc","imc","setimc","textButton","setTextButton","errorMsg","setErrorMsg","imcList","setImcList","imccalculator","heightFormat","replace","totalImc","toFixed","arr","id","Date","getTime","verifyNull","Vibration","vibrate","validationimc","formContext","Keyboard","dismiss","form","formLabel","formInput","formCalc","formButtom","exibitionResultImc","listImcs","reverse"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;;;;;;;;AAWA,OAAOC,SAAP;AACA,OAAOC,MAAP;;;AAGA,eAAe,SAASC,IAAT,GAAe;AAE1B,wBAA0BL,KAAK,CAACE,QAAN,CAAe,IAAf,CAA1B;AAAA;AAAA,MAAMI,MAAN;AAAA,MAAcC,SAAd;;AACA,yBAA0BP,KAAK,CAACE,QAAN,CAAe,IAAf,CAA1B;AAAA;AAAA,MAAMM,MAAN;AAAA,MAAcC,SAAd;;AACA,kBAAkCP,QAAQ,CAAC,2BAAD,CAA1C;AAAA;AAAA,MAAMQ,UAAN;AAAA,MAAkBC,aAAlB;;AACA,mBAAoBT,QAAQ,CAAC,IAAD,CAA5B;AAAA;AAAA,MAAMU,GAAN;AAAA,MAAWC,MAAX;;AACA,mBAAkCX,QAAQ,CAAC,UAAD,CAA1C;AAAA;AAAA,MAAMY,UAAN;AAAA,MAAkBC,aAAlB;;AACA,mBAA8Bb,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAMc,QAAN;AAAA,MAAgBC,WAAhB;;AACA,mBAA4Bf,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAMgB,OAAN;AAAA,MAAeC,UAAf;;AAIA,WAASC,aAAT,GAAwB;AACpB,QAAIC,YAAY,GAAGf,MAAM,CAACgB,OAAP,CAAe,GAAf,EAAmB,GAAnB,CAAnB;AACA,QAAIC,QAAQ,GAAI,CAACf,MAAM,IAAEa,YAAY,GAACA,YAAf,CAAP,EAAqCG,OAArC,CAA6C,CAA7C,CAAhB;AACAL,IAAAA,UAAU,CAAGM,GAAD,gCAAYA,GAAZ,IAAiB;AAACC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAAL;AAA2BhB,MAAAA,GAAG,EAACW;AAA/B,KAAjB,EAAF,CAAV;AACAV,IAAAA,MAAM,CAACU,QAAD,CAAN;AACH;;AACD,WAASM,UAAT,GAAqB;AACjB,QAAGjB,GAAG,IAAE,IAAR,EAAa;AACTkB,MAAAA,SAAS,CAACC,OAAV;AAEAd,MAAAA,WAAW,CAAC,oBAAD,CAAX;AACH;AACJ;;AAED,WAASe,aAAT,GAAwB;AACpB,QAAGxB,MAAM,IAAI,IAAV,IAAkBF,MAAM,IAAI,IAA/B,EAAoC;AAChCc,MAAAA,aAAa;AACbb,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,aAAa,CAAC,mBAAD,CAAb;AACAI,MAAAA,aAAa,CAAC,oBAAD,CAAb;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AAEH,KARD,MASI;AACJY,MAAAA,UAAU;AACVhB,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAE,MAAAA,aAAa,CAAC,UAAD,CAAb;AACAJ,MAAAA,aAAa,CAAC,wBAAD,CAAb;AACC;AACJ;;AAED,SAKQ,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAAC6B,WAApB;AAAA,eACKrB,GAAG,IAAI,IAAP,GACT,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEsB,QAAQ,CAACC,OAA7B;AAAsC,MAAA,KAAK,EAAE/B,MAAM,CAACgC,IAApD;AAAA,gBACI,MAAC,QAAD;AAAA,mBACA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEhC,MAAM,CAACiC,SAApB;AAAA;AAAA,UADA,EAIA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEjC,MAAM,CAACY,QAApB;AAAA,oBAA+BA;AAA/B,UAJA,EAKA,KAAC,SAAD;AAAW,UAAA,YAAY,EAAET,SAAzB;AACW,UAAA,KAAK,EAAED,MADlB;AAEW,UAAA,WAAW,EAAC,UAFvB;AAGW,UAAA,YAAY,EAAC,SAHxB;AAIW,UAAA,KAAK,EAAEF,MAAM,CAACkC;AAJzB,UALA,EAYA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAElC,MAAM,CAACiC,SAApB;AAAA;AAAA,UAZA,EAeA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEjC,MAAM,CAACY,QAApB;AAAA,oBAA+BA;AAA/B,UAfA,EAgBA,KAAC,SAAD;AAAW,UAAA,YAAY,EAAEP,SAAzB;AACW,UAAA,KAAK,EAAED,MADlB;AAEW,UAAA,WAAW,EAAC,SAFvB;AAGW,UAAA,YAAY,EAAC,SAHxB;AAIW,UAAA,KAAK,EAAEJ,MAAM,CAACkC;AAJzB,UAhBA,EAuBA,KAAC,gBAAD;AACA,UAAA,KAAK,EAAElC,MAAM,CAACmC,QADd;AAEA,UAAA,OAAO,EAAE,mBAAK;AAACP,YAAAA,aAAa,IAAGE,QAAQ,CAACC,OAAzB;AAAiC,WAFhD;AAAA,oBAKQ,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE/B,MAAM,CAACoC,UAApB;AAAA,sBAAiC1B;AAAjC;AALR,UAvBA;AAAA;AADJ,MADS,GAmCT,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACqC,kBAApB;AAAA,iBAEI,KAAC,SAAD;AAAW,QAAA,gBAAgB,EAAI/B,UAA/B;AAA2C,QAAA,SAAS,EAAEE;AAAtD,QAFJ,EAGI,KAAC,gBAAD;AACA,QAAA,KAAK,EAAER,MAAM,CAACmC,QADd;AAEA,QAAA,OAAO,EAAE,mBAAK;AAACP,UAAAA,aAAa,IAAGE,QAAQ,CAACC,OAAzB;AAAiC,SAFhD;AAAA,kBAIY,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE/B,MAAM,CAACoC,UAApB;AAAA,oBAAiC1B;AAAjC;AAJZ,QAHJ;AAAA,MApCI,EAgDJ,KAAC,QAAD;AACA,MAAA,KAAK,EAAGV,MAAM,CAACsC,QADf;AAEA,MAAA,IAAI,EAAExB,OAAO,CAACyB;AAFd,MAhDI;AAAA,IALR;AA0DE","sourcesContent":["import React, {Fragment, useState} from \"react\"\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    Vibration,\r\n    Keyboard,\r\n    Pressable,\r\n    FlatList, \r\n        }  from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native\"\r\nimport ResultImc from \"./ResultImc/\"\r\nimport styles from \"./style\"\r\n\r\n\r\nexport default function Form(){\r\n\r\n    const[height, setHeight]= React.useState(null);\r\n    const[weight, setWeight]= React.useState(null);\r\n    const[messageimc, setmessageimc]= useState(\"preencha o peso e alturaa\");\r\n    const[imc, setimc]= useState(null);\r\n    const[textButton, setTextButton]= useState(\"calcular\");\r\n    const[errorMsg, setErrorMsg]= useState(null);\r\n    const[imcList, setImcList]= useState([]);\r\n\r\n    \r\n\r\n    function imccalculator(){\r\n        let heightFormat = height.replace(\",\",\".\")\r\n        let totalImc = ((weight/(heightFormat*heightFormat)).toFixed(2));\r\n        setImcList ((arr) = [...arr, {id: new Date().getTime(), imc:totalImc}])\r\n        setimc(totalImc)\r\n    }\r\n    function verifyNull(){\r\n        if(imc==null){\r\n            Vibration.vibrate();\r\n\r\n            setErrorMsg(\"campo obrigatório*\")\r\n        }\r\n    }\r\n\r\n    function validationimc(){\r\n        if(weight != null && height != null){\r\n            imccalculator()\r\n            setHeight(null)\r\n            setWeight(null)\r\n            setmessageimc(\"seu imc é igual: \")\r\n            setTextButton(\"Calcular novamente\")\r\n            setErrorMsg(null)\r\n\r\n        }\r\n        else{\r\n        verifyNull()\r\n        setimc(null)\r\n        setTextButton(\"calcular\")\r\n        setmessageimc(\"preencha peso e altura\")\r\n        }\r\n    }\r\n    \r\n    return(\r\n\r\n        \r\n\r\n\r\n            <View style={styles.formContext}>\r\n                {imc == null ? (\r\n        <Pressable onPress={Keyboard.dismiss} style={styles.form}>\r\n            <Fragment>     \r\n            <Text style={styles.formLabel}>\r\n                Altura\r\n            </Text >    \r\n            <Text style={styles.errorMsg}>{errorMsg}</Text>\r\n            <TextInput onChangeText={setHeight}\r\n                       value={height} \r\n                       placeholder=\"Ex. 1.75\"\r\n                       keyboardType=\"numeric\"\r\n                       style={styles.formInput} />\r\n                \r\n                \r\n            <Text style={styles.formLabel}>\r\n                Peso\r\n            </Text>\r\n            <Text style={styles.errorMsg}>{errorMsg}</Text>\r\n            <TextInput onChangeText={setWeight}\r\n                       value={weight} \r\n                       placeholder=\"Ex. 575\"\r\n                       keyboardType=\"numeric\"\r\n                       style={styles.formInput}/>\r\n\r\n                       \r\n            <TouchableOpacity \r\n            style={styles.formCalc}\r\n            onPress={() =>{validationimc(),Keyboard.dismiss}}\r\n            \r\n                >\r\n                    <Text style={styles.formButtom}>{textButton}</Text>\r\n            </TouchableOpacity>     \r\n        </Fragment>               \r\n        </Pressable>\r\n      )  :\r\n        <View style={styles.exibitionResultImc}>\r\n\r\n            <ResultImc messageresultimc = {messageimc} resultImc={imc}/>\r\n            <TouchableOpacity \r\n            style={styles.formCalc}\r\n            onPress={() =>{validationimc(),Keyboard.dismiss}}\r\n                >\r\n                        <Text style={styles.formButtom}>{textButton}</Text>\r\n            </TouchableOpacity>\r\n        \r\n        </View>\r\n        }\r\n        <FlatList \r\n        style ={styles.listImcs}\r\n        data={imcList.reverse}>\r\n            </FlatList>   \r\n        </View>\r\n    )}\r\n"]},"metadata":{},"sourceType":"module"}