{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResultImc(props) {\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: \"Meu IMC hoje é:\" + props.resultImc\n            }));\n\n          case 2:\n            result = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.formaInfo,\n    children: [_jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          children: \"Share\"\n        })\n      })\n    }), _jsx(Text, {\n      style: styles.formaInfo,\n      children: props.messageresultimc\n    }), _jsx(Text, {\n      style: styles.resultImc,\n      children: props.resultImc\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/rafae/Desktop/Nova pasta (3)/newgit/src/components/Form/ResultImc/index.js"],"names":["React","styles","ResultImc","props","onShare","Share","share","message","resultImc","result","formaInfo","messageresultimc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSC,KAAK,CAACC,KAAN,CAAY;AAACC,cAAAA,OAAO,EAAC,oBAAmBJ,KAAK,CAACK;AAAlC,aAAZ,CADT;;AAAA;AACNC,YAAAA,MADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAGA,SAEI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA,eACI,KAAC,IAAD;AAAA,gBACI,KAAC,gBAAD;AAAA,kBACI,KAAC,IAAD;AAAA;AAAA;AADJ;AADJ,MADJ,EAOI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACS,SAApB;AAAA,gBAAgCP,KAAK,CAACQ;AAAtC,MAPJ,EAQI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACO,SAApB;AAAA,gBAAgCL,KAAK,CAACK;AAAtC,MARJ;AAAA,IAFJ;AAaH","sourcesContent":["import React from \"react\"\r\nimport {View, Text, TouchableOpacity, Share} from \"react-native\"\r\nimport styles from \"./style\"\r\n\r\nexport default function ResultImc(props) {\r\n\r\n    const onShare = async()=>{\r\n        const result = await Share.share({message:\"Meu IMC hoje é:\" +props.resultImc,})\r\n    }\r\n    return(\r\n\r\n        <View style={styles.formaInfo}>\r\n            <View>\r\n                <TouchableOpacity>\r\n                    <Text>Share</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            \r\n            <Text style={styles.formaInfo}>{props.messageresultimc}</Text>\r\n            <Text style={styles.resultImc}>{props.resultImc}</Text>\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}